plugins {
    id 'groovy'
    id 'java'
}

group = 'nsu.ru'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(Jar).configureEach {
    zip64 = true
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs = ["src/main/java", "src/main/groovy"] }
    }

//    test {
//        java { srcDirs = ["src/test/java"] }
//        groovy { srcDirs = ["src/test/groovy"] }
//    }
}

dependencies {
    implementation 'org.apache.groovy:groovy-all:4.0.16'

    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.4.0.202211300538-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.apache:6.4.0.202211300538-r'
    implementation 'org.eclipse.jgit:org.eclipse.jgit.gpg.bc:6.4.0.202211300538-r'
    //implementation 'org.kohsuke:github-api:1.319'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.apache.groovy:groovy-all:4.0.16'

    implementation files('libs/jplag-5.1.0.jar')

    implementation 'commons-validator:commons-validator:1.7'

    implementation group: 'commons-io', name: 'commons-io', version: '2.0.1'
}

//test {
//    useJUnitPlatform()
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
//}

compileTestJava.options.encoding = "UTF-8"

jar {
    manifest {
        attributes 'Main-Class': 'nsu.ru.Main'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
//    // Если нужен fat-jar (со всеми зависимостями), добавьте:
//    from(configurations.runtimeClasspath.get().map { if (it.isDirectory) it else zipTree(it) })
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}